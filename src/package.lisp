(uiop:define-package #:goal-lib
  (:use #:cl #:cl-ppcre)
  (:import-from )
  (:export
   :ex/defconstant
   :ex/defun
   :ex/defmacro
   :else
   :null?
   :integer?
   :float?
   :true
   :false
   :equal?
   :notequal?
   :==
   :!=
   ;;
   :stringify
   :string-append
   :string-append!
   :string-join
   :list->string
   :string-to-one-line
   :append!
   ;;
   :list-ref
   :vector->list
   :list->vector
   ;;
   :arr-first
   :arr-last
   :arr-last-idx
   :arr-idx-of
   :arr-new
   :arr-ref
   :arr-set!
   :arr-count
   :arr-push
   ;;
   :hash-map
   :hash-count
   :hash-ref
   :hash-set!
   :hash-clear!
   :hash-remove!
   :make-hash
   ;;
   :set!
   :inc
   :+!
   :1+!
   :dec
   :-!
   :1-!
   :*!
   :/!
   :false!
   :minmax
   :fminmax
   :mimax!
   :fminmax!
   :maxmin
   :fmaxmin
   :&+!
   :&-
   :&->
   :logior!
   :logxor!
   :logand!
   :logclear
   :logclear!
   :logtesta?
   :/-0-guard
   :mod-0-guard
   :float->int
   ;;
   :align-n
   :align16
   :align64
   :bit-field
   ;;
   :my/with-slots
   :update-struct
   :copy-parent-struct-func
   :copy-parent-struct
   :struct-names
   :struct-values
   :structp
   :struct-to-list
   :list-to-struct
   :list-to-struct!
   )
  )

(uiop:define-package #:type-system/interfaces
  (:use #:cl #:goal-lib)
  (:import-from
   :goal-lib  
   :alexandria
   )
  (:export
   ;;
   :POINTER-SIZE
   :STRUCTURE-ALIGNMENT
   ;;
   :EMPTY-SYMBOL
   ;;
   :GOAL-NEW-METHOD
   :GOAL-DEL-METHOD
   :GOAL-PRINT-METHOD
   :GOAL-INSPECT-METHOD
   :GOAL-LENGTH-METHOD
   :GOAL-ASIZE-METHOD
   :GOAL-COPY-METHOD
   :GOAL-RELOC-METHOD
   :GOAL-MEMUSAGE-METHOD  
   ;;
   :REG-CLASS-GPR-64
   :REG-CLASS-FLOAT
   :REG-CLASS-INT-128
   :REG-CLASS-VECTOR_FLOAT
   :REG-CLASS-INVALID
   ;;
   :to-str
   :diff
   :compare
   :is-reference?
   :get-load-size
   :get-load-signed
   :get-size-in-memory
   :get-offset
   :get-in-memory-alignment
   :get-inl-array-stride-align
   :get-inl-array-start-align
   :get-preferred-reg-class
   )
  )

(uiop:define-package #:type-system/typespec
  (:use #:cl #:goal-lib #:type-system/interfaces)
  (:import-from
   :goal-lib  
   :alexandria
   :type-system/interfaces
   )
  (:export
   ;;
   :type-tag
   :type-tag-new
   :type-tag-name
   :type-tag-value
   ;;
   :typespec
   :typespec-type
   :typespec-args
   :typespec-tags
   :typespec-p
   :typespec-new
   :typespec-basetype
   :typespec-args-ref
   :make-typespec
   ;;
   :typespec-empty?
   ;;
   :typespec-args-add
   :typespec-args-count
   :typespec-args-ref
   :typespec-args-empty?
   :typespec-args-last
   :typespec-args-first
   :typespec-has-single-arg
   :typespec-get-single-arg
   :typespec-is-compatible-child-method
   ;;
   :typespec-add-new-tag
   :typespec-try-get-tag
   :typespec-modify-tag
   :typespec-add-or-modify-tag
   :typespec-tags-empty?
   )
  )

(uiop:define-package #:type-system/type
  (:use #:cl #:type-system/interfaces #:goal-lib #:type-system/typespec #:alexandria)
  (:import-from
   :goal-lib
   :type-system/interfaces
   :type-system/typespec
   :alexandria
   )
  (:export
   ;;
   :method-info
   :method-info-id
   :method-info-name
   :method-info-type
   :method-info-defined-in-type
   :method-info-no-virtual
   :method-info-override
   :method-info-to-str
   :method-info-p
   :method-info-new
   :method-info-id
   :make-method-info
   ;;
   :type-flags
   :type-flags-size
   :type-flags-heap-base
   :type-flags-methods
   :type-flags-pad
   :type-flags-p
   :type-flags-new
   :type-flags-flag
   :make-type-flags
   ;;
   :gtype
   :gtype-methods
   :gtype-states
   :gtype-new-method-info
   :gtype-new-method-info-defined
   :gtype-generate-inspect
   :gtype-parent
   :gtype-name
   :gtype-allow-in-runtinme
   :gtype-runtime-name
   :gtype-is-boxed
   :gtype-heap-base
   :gtype-p
   :gtype-new
   :gtype-disallow-in-runtime
   :gtype-has-parent?
   :gtype-get-parent
   :gtype-get-my-method
   :gtype-get-my-method-by-id
   :gtype-get-my-last-method
   :gtype-get-my-new-method
   :gtype-add-method
   :gtype-add-new-method
   :gtype-set-runtime-type
   :gtype-add-state
   :gtype-find-state
   :gtype-base-type
   :gtype-get-my-method
   :make-gtype
   :incompatible-diff

   ;; Basic Types
   :basic-type
   :basic-type-is-final
   :basic-type-fields
   :basic-type-dynamic
   :basic-type-size-in-mem
   :basic-type-pack
   :basic-type-allow-misalign
   :basic-type-offset
   :basic-type-always-stack-singleton
   :basic-type-idx-first-unigue-field
   :basic-type-methods
   :basic-type-states
   :basic-type-new-method-info
   :basic-type-new-method-info-defined
   :basic-type-generate-inspect
   :basic-type-parent
   :basic-type-name
   :basic-type-allow-in-runtinme
   :basic-type-runtime-name
   :basic-type-is-boxed
   :basic-type-heap-base
   ;;
   :basic-type-p
   :make-basic-type
   :basic-type-diff
   :basic-type-new
   :basic-type-set-final
   ;;
   :bitfield-type
   :bitfield-type-fields
   :bitfield-type-is-final
   :bitfield-type-fields
   :bitfield-type-dynamic
   :bitfield-type-size-in-mem
   :bitfield-type-pack
   :bitfield-type-allow-misalign
   :bitfield-type-offset
   :bitfield-type-always-stack-singleton
   :bitfield-type-idx-first-unigue-field
   :bitfield-type-methods
   :bitfield-type-states
   :bitfield-type-new-method-info
   :bitfield-type-new-method-info-defined
   :bitfield-type-generate-inspect
   :bitfield-type-parent
   :bitfield-type-name
   :bitfield-type-allow-in-runtinme
   :bitfield-type-runtime-name
   :bitfield-type-is-boxed
   :bitfield-type-heap-base
   ;;
   :bitfield-type-p
   :bitfield-type-new
   :make-bitfield-type
   ;;
   :to-str
   :compare
   :diff
   ;;
   :enum-type
   :enum-type-is-bitfield
   :enum-type-entries
   :enum-type-is-final
   :enum-type-fields
   :enum-type-dynamic
   :enum-type-size-in-mem
   :enum-type-pack
   :enum-type-allow-misalign
   :enum-type-offset
   :enum-type-always-stack-singleton
   :enum-type-idx-first-unigue-field
   :enum-type-methods
   :enum-type-states
   :enum-type-new-method-info
   :enum-type-new-method-info-defined
   :enum-type-generate-inspect
   :enum-type-parent
   :enum-type-name
   :enum-type-allow-in-runtinme
   :enum-type-runtime-name
   :enum-type-is-boxed
   :enum-type-heap-base
   ;;
   :enum-type-p
   :enum-type-diff
   :enum-type-find
   :enum-type-new
   :make-enum-type
   ;;
   :field
   :field-name
   :field-type
   :field-offset
   :field-is-inline
   :field-is-dynamic
   :field-is-array
   :field-array-size
   :field-alignment
   :field-skip-in-static-decomp
   :field-is-user-placed
   :field-field-score
   :field-p
   :field-diff
   :field-is-array?
   :field-is-inline?
   :field-mark-as-user-placed
   :field-new
   :field-set-alignment
   :field-set-array
   :field-set-dynamic
   :field-set-field-score
   :field-set-inline
   :field-set-offset
   :field-set-skip-in-static-decomp
   :make-field
   ;;
   :get-in-memory-alignment
   :get-in-memory-alignment
   :get-in-memory-alignment
   :get-in-memory-alignment
   :get-inl-array-start-align
   :get-inl-array-start-align-impl
   :get-inl-array-stride-align
   :get-inl-array-stride-align-impl
   :get-load-signed
   :get-load-size
   :get-offset
   :get-preferred-reg-class
   :get-size-in-memory
   :is-reference?
   :lookup-bitfield
   ;;
   :null-type
   :null-type-methods
   :null-type-states
   :null-type-new-method-info
   :null-type-new-method-info-defined
   :null-type-generate-inspect
   :null-type-parent
   :null-type-name
   :null-type-allow-in-runtinme
   :null-type-runtime-name
   :null-type-is-boxed
   :null-type-heap-base
   :null-type-p
   :null-type-new
   :make-null-type
   ;;
   :reference-type
   :reference-type-methods
   :reference-type-states
   :reference-type-new-method-info
   :reference-type-new-method-info-defined
   :reference-type-generate-inspect
   :reference-type-parent
   :reference-type-name
   :reference-type-allow-in-runtinme
   :reference-type-runtime-name
   :reference-type-is-boxed
   :reference-type-heap-base
   :reference-type-p
   :reference-type-new
   :make-reference-type
   ;;
   :sbitfield
   :sbitfield-type
   :sbitfield-name
   :sbitfield-offset
   :sbitfield-size
   :sbitfield-skip-in-static-decomp
   :sbitfield-p
   :sbitfield-diff
   :sbitfield-new
   :make-sbitfield
   ;;
   :struct-type
   :struct-type-fields
   :struct-type-dynamic
   :struct-type-size-in-mem
   :struct-type-pack
   :struct-type-allow-misalign
   :struct-type-offset
   :struct-type-always-stack-singleton
   :struct-type-idx-of-first-unique-field
   :struct-type-methods
   :struct-type-states
   :struct-type-new-method-info
   :struct-type-new-method-info-defined
   :struct-type-generate-inspect
   :struct-type-parent
   :struct-type-name
   :struct-type-allow-in-runtinme
   :struct-type-runtime-name
   :struct-type-is-boxed
   :struct-type-heap-base
   ;;
   :struct-type-p
   :struct-lookup-field
   :struct-type-add-field
   :struct-type-diff
   :struct-type-fields-count
   :struct-type-fields-ref
   :struct-type-get-size-in-memory
   :struct-type-inherit
   :struct-type-inspect-fields
   :struct-type-lookup-field
   :struct-type-new
   :struct-type-override-offset
   :struct-type-override-size-in-memory
   :struct-type-to-str
   :make-struct-type
   ;;
   :value-type
   :value-type-size
   :value-type-offset
   :value-type-sign-extend
   :value-type-reg-kind
   :value-type-methods
   :value-type-states
   :value-type-new-method-info
   :value-type-new-method-info-defined
   :value-type-generate-inspect
   :value-type-parent
   :value-type-name
   :value-type-allow-in-runtinme
   :value-type-runtime-name
   :value-type-is-boxed
   :value-type-heap-base
   :value-type-p
   :value-type-diff
   :value-type-inherit
   :value-type-new
   :value-type-size
   :make-value-type
   )
  )

(uiop:define-package #:type-system
  (:use
   #:cl
	#:alexandria
	#:goal-lib
	#:type-system/interfaces
	#:type-system/typespec
	#:type-system/type
	)
  (:import-from
   )
  (:export
   :type-system
   :type-system-types
   :type-system-forward-declared-types
   :type-system-forward-declared-method-counts
   :type-system-old-types
   :type-system-allow-redefinition
   :type-system-new
   :forward-declare-type-as-type
   :forward-declared-types-find
   :make-a-typespec
   :get-type-of-type
   :tc
   :lowest-common-ancestor
   :lookup-type-allow-partial-def
   :inspect-all-type-information
   :get-path-up-tree
   :types-find
   )
  (:reexport :goal-lib)
  (:reexport :type-system/interfaces)
  (:reexport :type-system/type)
  (:reexport :type-system/typespec)
  )
